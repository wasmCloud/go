// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package monotonicclock represents the imported interface "wasi:clocks/monotonic-clock@0.2.0".
package monotonicclock

import (
	"github.com/wasmCloud/go/examples/component/http-server/gen/wasi/io/poll"
)

// Pollable represents the imported type alias "wasi:clocks/monotonic-clock@0.2.0#pollable".
//
// See [poll.Pollable] for more information.
type Pollable = poll.Pollable

// Instant represents the u64 "wasi:clocks/monotonic-clock@0.2.0#instant".
//
//	type instant = u64
type Instant uint64

// Duration represents the u64 "wasi:clocks/monotonic-clock@0.2.0#duration".
//
//	type duration = u64
type Duration uint64

// Now represents the imported function "now".
//
//	now: func()
//
//go:nosplit
func Now() {
	wasmimport_Now()
	return
}

// Resolution represents the imported function "resolution".
//
//	resolution: func()
//
//go:nosplit
func Resolution() {
	wasmimport_Resolution()
	return
}

// SubscribeInstant represents the imported function "subscribe-instant".
//
//	subscribe-instant: func(when: instant)
//
//go:nosplit
func SubscribeInstant(when Instant) {
	when0 := (uint64)(when)
	wasmimport_SubscribeInstant((uint64)(when0))
	return
}

// SubscribeDuration represents the imported function "subscribe-duration".
//
//	subscribe-duration: func(when: duration)
//
//go:nosplit
func SubscribeDuration(when Duration) {
	when0 := (uint64)(when)
	wasmimport_SubscribeDuration((uint64)(when0))
	return
}
