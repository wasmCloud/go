name: Component / WIT

on:
  push:
    tags:
    - 'component-wit-v*'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # for softprops/action-gh-release
      packages: write # for publishing the wit to ghcr.io
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Extract tag context
      id: ctx
      run: |
          version=${GITHUB_REF_NAME#wit-v}
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "tarball=wit-${version}.tar.gz" >> "$GITHUB_OUTPUT"
          echo "version is ${version}"
    - uses: taiki-e/install-action@ad95d4e02e061d4390c4b66ef5ed56c7fee3d2ce # v2.58.17
      with:
        tool: wash@0.37.0
    - name: Generate and set config
      shell: bash
      env:
        OCI_USERNAME: ${{ github.repository_owner }}
        OCI_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cat << EOF > package_config.toml
        [namespace_registries]
        wasmcloud = "wasmcloud.com"
        wrpc = "bytecodealliance.org"
        wasi = "wasi.dev"

        [registry."wasmcloud.com".oci]
        auth = { username = "${OCI_USERNAME,,}", password = "${OCI_PASSWORD}" }
        EOF
        echo "WASH_PACKAGE_CONFIG_FILE=$(realpath package_config.toml)" >> $GITHUB_ENV
    - name: Build
      run: |
        wash wit build --wit-dir ./component/wit -f package.wasm
    - name: Push version-tagged WebAssembly binary to GHCR
      run: |
        wash wit publish package.wasm
    - name: Package tarball for release
      run: |
        tar -cvzf ${{ steps.ctx.outputs.tarball }} -C ./component wit
    - name: Release
      uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
      with:
        files: ${{ steps.ctx.outputs.tarball }}
        make_latest: "false"
